name: Theme Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  preview:
    name: Generate Theme Preview
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Setup Neovim
        uses: rhymond/setup-nvim@v0.2.0
        with:
          version: 'stable'

      - name: Generate theme preview
        run: |
          # Generate preview for PR branch
          nvim --headless -l ci/preview.lua
          mv theme_preview.html pr_preview.html
          mv theme_colors.json pr_colors.json
          
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
          
      - name: Generate base preview
        run: |
          # Generate preview for base branch  
          cd base
          nvim --headless -l ci/preview.lua
          mv theme_preview.html ../base_preview.html
          mv theme_colors.json ../base_colors.json
          cd ..

      - name: Compare previews and create comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read generated files
            const prPreview = fs.readFileSync('pr_preview.html', 'utf8');
            const prColors = JSON.parse(fs.readFileSync('pr_colors.json', 'utf8'));
            const baseColors = JSON.parse(fs.readFileSync('base_colors.json', 'utf8'));
            
            // Compare colors
            const colorChanges = [];
            const allKeys = [...new Set([...Object.keys(prColors), ...Object.keys(baseColors)])];
            
            for (const key of allKeys) {
              const prColor = prColors[key];
              const baseColor = baseColors[key];
              
              if (prColor !== baseColor) {
                colorChanges.push({
                  name: key,
                  before: baseColor || 'undefined',
                  after: prColor || 'removed'
                });
              }
            }
            
            // Create comment body
            let commentBody = `## ðŸŒ¿ yoda.nvim Theme Preview
            
            This PR includes changes to the theme. Here's a preview of how it looks:
            
            <details>
            <summary>ðŸŽ¨ <strong>Theme Preview</strong> (click to expand)</summary>
            
            ${prPreview.match(/<body>([\s\S]*)<\/body>/)[1]}
            
            </details>
            `;
            
            if (colorChanges.length > 0) {
              commentBody += `
            
            ### ðŸ”„ Color Changes
            
            | Element | Before | After |
            |---------|--------|-------|`;
              
              for (const change of colorChanges) {
                const beforeSwatch = change.before !== 'undefined' ? 
                  `<span style="display: inline-block; width: 16px; height: 16px; background-color: ${change.before}; border: 1px solid #ccc; border-radius: 3px; margin-right: 8px;"></span>${change.before}` :
                  'undefined';
                const afterSwatch = change.after !== 'removed' ?
                  `<span style="display: inline-block; width: 16px; height: 16px; background-color: ${change.after}; border: 1px solid #ccc; border-radius: 3px; margin-right: 8px;"></span>${change.after}` :
                  'removed';
                  
                commentBody += `
            | ${change.name} | ${beforeSwatch} | ${afterSwatch} |`;
              }
            } else {
              commentBody += `
            
            ### âœ¨ No color changes detected
            
            This PR doesn't change the theme colors, but may include other improvements.`;
            }
            
            commentBody += `
            
            ---
            
            <sub>ðŸ¤– This preview was automatically generated by the yoda.nvim CI system.</sub>`;
            
            // Find existing comment to update
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('ðŸŒ¿ yoda.nvim Theme Preview')
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              console.log('Updated existing theme preview comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
              console.log('Created new theme preview comment');
            }

      - name: Upload preview artifacts
        uses: actions/upload-artifact@v4
        with:
          name: theme-previews
          path: |
            pr_preview.html
            base_preview.html
            pr_colors.json
            base_colors.json
          retention-days: 30